--Introduction:
pypdas is an implementation of primal-dual active-set (PDAS) method, with inexact subproblem solves, for convex quadratic optimization problems (QPs) of the form:
   min {1/2x'Hx + c'x | Aeq x = beq, cl <= Ax <= cu, l <= x <= u}.
Key features of this package is its:
- Unified interface for both dense and sparse problems; 
- Flexible control on the speed of identification of the optimal active-set;
- Customizable subproblem (linear equation system) iterative solve.

--Example:
-Run discretized optimal control problem by executing pydas/examples/eg_control.py, the results should be somewhat like (former: exact subproblem solve, later: inexact subproblem solve):

Solving optimal control problem by exact subproblem solve.
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0   -3.50e+01      3.42e+02       0    77   123    55     0   1.00e+02   989
1   -2.77e+01      3.48e+02       0    48   152    16     0   1.00e+02  1716
2   -2.11e+01      2.78e+02       0    64   136    11     0   1.00e+02  1266
3   -1.81e+01      1.79e+02       0    75   125     7     0   1.00e+02  1243
4   -1.72e+01      6.49e+01       0    82   118     4     0   1.00e+02   906
5   -1.70e+01      1.65e-06       0    86   114     0     0   1.00e+02   965
6   -1.70e+01      8.20e-11       0    86   114     0     0   1.00e+02   228
------------------------------------------------------------------------------
Problem Status     : Optimal
Total CG-iterations: 7313
------------------------------------------------------------------------------


Solving optimal control problem by inexact subproblem solve.
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0   -3.50e+01      3.42e+02       0    77   123    53    44   1.12e+04   290
1   -2.04e+01      1.88e+02       0    59   141    21    17   1.12e+04   182
2   -1.29e+01      5.86e+01       0    76   124     6     5   1.12e+04   132
3   -1.79e+01      1.37e+02       0    81   119     6     5   1.72e+04   252
4   -1.70e+01      4.97e+01       0    84   116     2     2   1.72e+04   123
5   -1.70e+01      3.66e-11       0    86   114     0     0   1.72e+04   785
------------------------------------------------------------------------------
Problem Status     : Optimal
Total CG-iterations: 1764
------------------------------------------------------------------------------

-Run discretized optimal boundary control problem by executing pydas/examples/eg_control2.py, the results should be somewhat like (former: exact subproblem solve, later: inexact subproblem solve):

Solving optimal boundary control problem by exact subproblem solve.
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0   -4.91e+01      1.73e+02       0    28   152    25     0   1.00e+02  1378
1   -3.64e+01      1.72e+02       0    19   161     8     0   1.00e+02  1924
2   -2.04e+01      1.54e+02       0    27   153     5     0   1.00e+02  1820
3   -1.12e+01      9.42e+01       0    30   150     3     0   1.00e+02  1881
4   -5.62e+00      7.86e+01       0    33   147     2     0   1.00e+02  1282
5   -2.51e+00      4.51e+01       0    35   145     2     0   1.00e+02  1165
6   -1.92e+00      2.03e+01       0    37   143     1     0   1.00e+02   918
7   -1.82e+00      9.31e-11       0    38   142     0     0   1.00e+02   579
------------------------------------------------------------------------------
Problem Status     : Optimal
Total CG-iterations: 10947
------------------------------------------------------------------------------


Solving optimal boundary control problem by inexact subproblem solve.
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0   -4.91e+01      1.70e+02       0    28   152    25    21   2.87e+04   616
1   -2.45e+01      1.43e+02       0    23   157     7     6   2.87e+04   505
2   -1.33e+01      1.22e+02       0    29   151     3     3   2.87e+04   428
3   -7.28e+00      8.30e+01       0    32   148     3     3   2.87e+04   409
4   -2.04e+00      1.21e+01       0    35   145     2     2   2.87e+04   311
5    2.12e+00      8.42e+00       0    37   143     2     2   2.87e+04   347
6   -1.52e+00      1.27e-02       0    39   141     2     2   2.87e+04   317
7   -5.30e+00      2.02e+01       0    37   143     1     1   2.87e+04   261
8   -1.82e+00      1.16e-11       0    38   142     0     0 

-Run a randomly generated convex QP by executing pypdas/examples/eg_rand.py, the results should be somewhat like (block1: exact subproblem solve on bound-constrained QP, block2: inexact subproblem solve on bound-constrained QP, block3: exact subproblem solve on general QP, block4: inexact subproblem solve on general QP):

Solving random bound-constrained QP with exact subproblem solve:
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0    2.77e+02      5.37e+01      43    18    39    49     0   1.00e+02    46
1    1.81e+02      1.32e+01      39    19    42    24     0   1.00e+02    45
2    1.84e+02      1.60e+00      47    19    34     7     0   1.00e+02    33
3    1.84e+02      1.77e-01      45    20    35     3     0   1.00e+02    30
4    1.84e+02      1.13e-02      45    21    34     1     0   1.00e+02    29
5    1.84e+02      6.81e-11      46    21    33     0     0   1.00e+02    26
------------------------------------------------------------------------------
Problem Status     : Optimal
Total CG-iterations: 209
------------------------------------------------------------------------------


Solving random bound-constrained QP with inexact subproblem solve:
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0    4.51e+02      3.72e+01      53    18    29    40    34   1.00e+02     5
1    4.35e+02      6.37e+00      46    17    37    16    15   1.00e+02     9
2    4.51e+02      4.09e-01      48    20    32     3     3   1.00e+02     5
3    4.51e+02      1.04e+00      47    22    31     2     2   1.00e+02     1
4    4.51e+02      1.21e-01      47    20    33     1     1   1.00e+02     5
5    4.51e+02      2.04e-12      47    21    32     0     0   1.00e+02    35
------------------------------------------------------------------------------
Problem Status     : Optimal
Total CG-iterations: 60
------------------------------------------------------------------------------


Solving random constrained QP with exact subproblem solve:
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0    4.87e+02      2.85e+01      49    21    30    36     0   1.00e+02    36
1    4.69e+02      7.82e+00      52    21    27    23     0   1.00e+02    33
2    4.67e+02      8.13e-01      48    18    34     8     0   1.00e+02    51
3    4.70e+02      2.41e-01      49    19    32     4     0   1.00e+02    41
4    4.70e+02      2.20e-03      49    19    32     2     0   1.00e+02    42
5    4.69e+02      7.64e-01      49    20    31     3     0   1.00e+02    37
6    4.69e+02      1.36e-12      49    20    31     0     0   1.00e+02    42
------------------------------------------------------------------------------
Problem Status     : Optimal
Total CG-iterations: 282
------------------------------------------------------------------------------


Solving random constrained QP with inexact subproblem solve:
==============================================================================
Iter     Obj         KKT        |AL|  |AU|  |I|   |V|   |cV|   invnorm  CG-IT
==============================================================================
0    4.71e+02      7.82e+01      44    27    29    49    44   1.00e+02     9
1    2.49e+02      1.36e+01      42    17    41    33    30   1.00e+02    13
2    2.63e+02      2.32e+00      51    13    36    11    11   1.00e+02    16
3    2.73e+02      2.20e+00      51    14    35     3     3   1.00e+02     8
4    2.72e+02      7.83e-01      50    14    36     2     2   1.00e+02     7
5    2.72e+02      3.96e-01      52    14    34     1     1   1.00e+02     1
6    2.72e+02      5.74e-01      53    14    33     3     3   1.00e+02     3
7    2.72e+02      3.80e-11      51    14    35     1     1   1.00e+02    46
------------------------------------------------------------------------------
Problem Status     : Optimal
Total CG-iterations: 103
------------------------------------------------------------------------------

--Caveat:
Convergence is known for certain convex QPs arising in optimal control, most but not all convex QPs are solvable by pypdas.

--Prerequisites:
cvxopt (http://cvxopt.org/)
numpy (http://www.numpy.org/)
Set PYTHONPATH to include folder pdas/

--Design:
object-oriented
observer pattern heavily used
